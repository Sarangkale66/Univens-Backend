<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Details</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-4 sm:p-6 md:p-10">
    <div class="max-w-3xl mx-auto bg-white p-4 sm:p-6 rounded-lg shadow-md">
        <h2 class="text-xl sm:text-2xl font-bold mb-4">User Details</h2>

        <div class="border-b pb-4 mb-4">
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <div><strong>Full Name:</strong> <span class="text-gray-700"><%= user.fullname %></span></div>
                <div><strong>Company:</strong> <span class="text-gray-700"><%= user.companyName %></span></div>
                <div><strong>Role:</strong> <span class="text-gray-700"><%= user.role %></span></div>
                <div>
                    <strong>Email:</strong>
                    <a
                      class="text-blue-500"
                      href="https://mail.google.com/mail/?view=cm&fs=1&to=<%= user.email %>&su=Your%20Request%20Has%20Been%20Received%20%E2%80%93%20What%E2%80%99s%20Next%3F"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <%= user.email %>
                    </a>
                  </div>                  
                  <div>
                    <strong>Phone:</strong>
                    <a class="text-green-700" href="tel:<%= user.phoneNumber.replace(/^0+/, '') %>">
                      <%= user.phoneNumber.replace(/^0+/, '') %>
                    </a>
                  </div>                 
                <% if (user.websiteLink) { %>
                    <div><strong>Website:</strong> <a href="<%= user.websiteLink %>" class="text-blue-500 break-words" target="_blank"><%= user.websiteLink %></a></div>
                <% } %>
                <div><strong>Status:</strong> 
                    <span class="px-2 py-1 rounded 
                        <%= user.status === 'new' ? 'bg-blue-200' : user.status === 'inProgress' ? 'bg-yellow-200' : 'bg-green-200' %>">
                        <%= user.status %>
                    </span>
                </div>
            </div>
        </div>

        <% if (user.fileId) { %>
            <h2 class="text-xl sm:text-2xl font-bold mb-4">File Information</h2>
            <div class="bg-gray-100 p-4 rounded-lg">
                <div><strong>Looking For:</strong> <span class="text-gray-700"><%= user.fileId.lookingFor %></span></div>
                <div class="mt-2"><strong>Description:</strong> <p class="text-gray-700 break-words"><%= user.fileId.description %></p></div>
                <% if (user.fileId.file && user.fileId.file.length > 0) { %>
                    <div class="mt-3">
                        <strong>Attached Files:</strong>
                        <ul class="mt-2 space-y-1">
                            <% user.fileId.file.forEach(file => { %>
                                <li>
                                    <button onclick="forceDownload('<%= file %>', '<%= file.split('/').pop() %>')" class="text-blue-500 break-words">Download File</button>
                                    <button onclick="deleteFile('<%= file %>')" class="text-red-500 ml-2">Delete File</button>
                                </li>
                            <% }) %>
                            <div id="downloadStatus" class="hidden text-green-500 mt-2">Downloading...</div>
                            <div id="deleteStatus" class="hidden text-red-500 mt-2">Deleting file...</div>
                        </ul>
                    </div>
                <% } %>
            </div>
        <% } %>

        <div class="flex flex-col sm:flex-row sm:space-x-4 mt-4 space-y-2 sm:space-y-0">
          <button id="deleteUser" class="w-full sm:w-auto px-4 py-2 bg-red-500 text-white rounded">Delete User</button>
          <button id="updateUser" class="w-full sm:w-auto px-4 py-2 bg-yellow-500 text-white rounded">Update User</button>
          <button id="updateStatus" class="w-full sm:w-auto px-4 py-2 bg-green-500 text-white rounded">Update Status</button>
          <button id="updateFileBtn" class="w-full sm:w-auto px-4 py-2 bg-green-500 text-white rounded">Update File</button>
      </div>

      <div id="statusModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
        <div class="bg-white p-4 sm:p-6 rounded-lg shadow-lg w-11/12 sm:w-80">
            <h2 class="text-lg font-bold mb-4">Update Status</h2>
            <select id="statusSelect" class="border p-2 w-full">
                <option value="new">New</option>
                <option value="inProgress">In Progress</option>
                <option value="completed">Completed</option>
            </select>
            <div class="flex justify-end gap-2 mt-4">
                <button id="closeModal" class="px-4 py-2 bg-gray-400 text-white rounded">Cancel</button>
                <button id="saveStatus" class="px-4 py-2 bg-green-500 text-white rounded">Save</button>
            </div>
        </div>
    </div>

    <div id="updateUserModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
        <div class="bg-white p-4 sm:p-6 rounded-lg shadow-lg w-11/12 sm:w-80">
            <h2 class="text-lg font-bold mb-4">Update User Information</h2>
            <form id="updateUserForm" class="flex flex-col gap-3">
                <input type="text" id="fullname" value="<%= user.fullname %>" class="border p-2" placeholder="Full Name" required />
                <input type="text" id="companyName" value="<%= user.companyName %>" class="border p-2" placeholder="Company Name" required />
                <input type="text" id="role" value="<%= user.role %>" class="border p-2" placeholder="Role" required />
                <input type="email" id="email" value="<%= user.email %>" class="border p-2" placeholder="Email" required />
                <input type="text" id="phoneNumber" value="<%= user.phoneNumber %>" class="border p-2" placeholder="Phone Number" required />
                <input type="url" id="websiteLink" value="<%= user.websiteLink %>" class="border p-2" placeholder="Website Link" />
                <div class="flex justify-end gap-2 mt-4">
                    <button type="button" id="cancelUpdate" class="px-4 py-2 bg-gray-400 text-white rounded">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded">Save</button>
                </div>
            </form>
        </div>
    </div>

    <div id="updateFileModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
        <div class="bg-white p-4 sm:p-6 rounded-lg shadow-lg w-11/12 sm:w-80">
            <h2 class="text-lg font-bold mb-4">Update File Information</h2>
            <form id="updateFileForm" class="flex flex-col gap-3">
                <select id="lookingFor" class="border p-2" required>
                    <option value=""><%= user.fileId?.lookingFor %></option>
                    <option>Branding & Marketing</option>
                    <option>Business Strategy & Planning</option>
                    <option>Customer Experience</option>
                    <option>Customer Support</option>
                    <option>Funding & Investment</option>
                    <option>Innovation</option>
                    <option>Sustainability</option>
                    <option>Legal & Compliance</option>
                    <option>Operations & Efficiency</option>
                    <option>Product Development</option>
                    <option>Risk Management</option>
                    <option>Sales</option>
                    <option>Growth</option>
                    <option>Talent Acquisition</option>
                    <option>Tech Integration</option>
                    <option>Something else..</option>
                </select>
                <textarea id="description" class="border p-2" placeholder="Description" required><%= user.fileId.description %></textarea>
                <input type="file" id="newFile" name="files" multiple class="border p-2" />
                <input type="hidden" id="oldFileUrl" value="" />
                <div class="flex justify-end gap-2 mt-4">
                    <button type="button" id="cancelFileUpdate" class="px-4 py-2 bg-gray-400 text-white rounded">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded">Save</button>
                </div>
            </form>
        </div>
    </div>
    </div>
    <script>
      const userId = "<%= user._id %>";

      document.getElementById("deleteUser").addEventListener("click", async () => {
          if (confirm("Are you sure you want to delete this user?")) {
              try {
                  const response = await fetch(`/user/delete/${userId}`, { method: "DELETE" });
                  const data = await response.json();
                  if (data.success) {
                      alert("User deleted successfully!");
                      window.location.href = "/dashboard"; 
                  } else {
                      alert("Error deleting user.");
                  }
              } catch (error) {
                  console.error("Error deleting user:", error);
                  alert("An error occurred while deleting the user.");
              }
          }
      });

    document.getElementById("updateStatus").addEventListener("click", () => {
        document.getElementById("statusModal").classList.remove("hidden");
    });

    document.getElementById("closeModal").addEventListener("click", () => {
        document.getElementById("statusModal").classList.add("hidden");
    });

    document.getElementById("saveStatus").addEventListener("click", async () => {
        const newStatus = document.getElementById("statusSelect").value;
        
        try {
            const response = await fetch(`/user/update-status/${userId}`, {
                method: "PATCH",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ status: newStatus }),
            });

            if (response.ok) {
                alert("Status updated successfully!");
                window.location.reload();
            } else {
                const result = await response.json();
                alert(result.message || "Failed to update status.");
            }
        } catch (error) {
            console.error("Error updating status:", error);
            alert("An error occurred while updating the status.");
        }

        document.getElementById("statusModal").classList.add("hidden");
    });


    document.getElementById("updateUser").addEventListener("click", () => {
        document.getElementById("updateUserModal").classList.remove("hidden");
    });

    document.getElementById("cancelUpdate").addEventListener("click", () => {
        document.getElementById("updateUserModal").classList.add("hidden");
    });

    document.getElementById("updateUserForm").addEventListener("submit", async (e) => {
        e.preventDefault();
        const updatedData = {
            fullname: document.getElementById("fullname").value,
            companyName: document.getElementById("companyName").value,
            role: document.getElementById("role").value,
            email: document.getElementById("email").value,
            phoneNumber: document.getElementById("phoneNumber").value,
            websiteLink: document.getElementById("websiteLink").value,
        };

        try {
            const response = await fetch(`/user/update/${userId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(updatedData),
            });

            const result = await response.json();
            if (response.ok) {
                alert("User updated successfully!");
                window.location.reload();
            } else {
                alert(result.error || "Failed to update user.");
            }
        } catch (error) {
            console.error("Error updating user:", error);
            alert("An error occurred while updating the user.");
        }

        document.getElementById("updateUserModal").classList.add("hidden");
    });

    document.getElementById("updateFileBtn").addEventListener("click", () => {
        document.getElementById("updateFileModal").classList.remove("hidden");
    });

    document.getElementById("cancelFileUpdate").addEventListener("click", () => {
        document.getElementById("updateFileModal").classList.add("hidden");
    });

    document.getElementById("updateFileForm").addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData();
        formData.append('lookingFor', document.getElementById("lookingFor").value);
        formData.append('description', document.getElementById("description").value);

        const fileInput = document.getElementById("newFile");
        if (fileInput.files.length > 0) {
            for (let i = 0; i < fileInput.files.length; i++) {
                formData.append('files', fileInput.files[i]);
            }
        }

        const oldFileUrl = document.getElementById("oldFileUrl").value;
        if (oldFileUrl) {
            formData.append('oldFileUrl', oldFileUrl);
        }

        try {
            const response = await fetch(`/file/update/${userId}`, {
                method: "PUT",
                body: formData
            });

            const result = await response.json();
            if (response.ok) {
                alert("File updated successfully!");
                window.location.reload();
            } else {
                alert(result.message || "Failed to update file.");
            }
        } catch (error) {
            console.error("Error updating file:", error);
            alert("An error occurred while updating the file.");
        }

        document.getElementById("updateFileModal").classList.add("hidden");
    });


    function forceDownload(url, filename) {
        const status = document.getElementById('downloadStatus');
        status.classList.remove('hidden');
        status.textContent = 'Downloading...';

        fetch(url)
            .then(response => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.blob();
            })
            .then(blob => {
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.setAttribute('download', filename);
                document.body.appendChild(link);
                link.click();
                link.remove();
                status.textContent = 'Download complete!';
                setTimeout(() => status.classList.add('hidden'), 3000);
            })
            .catch(error => {
                console.error(error);
                status.textContent = 'Download failed!';
                setTimeout(() => status.classList.add('hidden'), 3000);
            });
    }

    async function deleteFile(fileUrl) {
        if (!confirm('Are you sure you want to delete this file?')) {
            return;
        }

        const status = document.getElementById('deleteStatus');
        status.classList.remove('hidden');
        status.textContent = 'Deleting file...';

        try {
            const response = await fetch(`/file/deleteSupaFile/${userId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ fileUrl })
            });

            const result = await response.json();
            if (response.ok) {
                status.textContent = 'File deleted successfully!';
                setTimeout(() => {
                    status.classList.add('hidden');
                    window.location.reload();
                }, 2000);
            } else {
                status.textContent = result.error || 'Failed to delete file.';
                setTimeout(() => status.classList.add('hidden'), 3000);
            }
        } catch (error) {
            console.error('Error deleting file:', error);
            status.textContent = 'An error occurred while deleting the file.';
            setTimeout(() => status.classList.add('hidden'), 3000);
        }
    }
  </script>
</body>
</html>
